services:
  nodered:
    image: nodered/node-red
    container_name: nodered
    ports:
      - "${NODE_RED_PORT}:1880"
    volumes:  
      - nodered_data:/data
    restart: unless-stopped #เป็นการกำหนดให้ container นี้จะ restart อัตโนมัติถ้ามีปัญหา

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports: 
      - "${GRAFANA_PORT}:3000" #เป็นกำหนด port ที่ใช้ในการเรียกใช้งาน Grafana ซึ่งจะถูกแมพไปยัง port กับไฟล์ .env ด้วยนะ เพราะตอนนี้เป็นการเรียกใช้งาน 3001
    volumes:
      - grafana_data:/data #เป็นการ map path สำหรับเก็บข้อมูลของ Grafana เช่น dashboard, plugins, และการตั้งค่าต่างๆ ให้อยู่ในโฟลเดอร์ data โดยชื่อที่ใช้ในการ map คือ grafana_data
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    restart: unless-stopped #เป็นการกำหนดให้ container นี้จะ restart อัตโนมัติถ้ามีปัญหา

  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
#      - ./mosquitto/config:/mosquitto/config
# นี่เป็นการ map path ระหว่างตัว host (เครื่องที่เรารัน docker) กับ container
# ฝั่งซ้ายคือ path บน host และฝั่งขวาคือ path บน container
       - C:/docker/iot/mosquitto/config:/mosquitto/config # กำหนด path สำหรับ config เช่น ตัว password, port, protocol ที่ใช้ในการทำงาน
       - C:/docker/iot/mosquitto/data:/mosquitto/data # กำหนด path สำหรับ data เช่น เป็นการเก็บตัว message ที่ส่งผ่าน MQTT
       - C:/docker/iot/mosquitto/log:/mosquitto/log # กำหนด path สำหรับ log เช่น log ของการเชื่อมต่อ, การส่ง message
    restart: unless-stopped #เป็นการกำหนดให้ container นี้จะ restart อัตโนมัติถ้ามีปัญหา

  influxdb2:
    container_name: influxdb2
    image: influxdb:2
    ports:
      - 8086:8086
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup   #เริ่มการ set up ตัว influxs
      DOCKER_INFLUXDB_INIT_USERNAME_FILE: /run/secrets/influxdb2-admin-username  #การให้ docker เข้าไปหา file USENAME จาก  /run/secrets/influxdb2-admin-username ซึ่งตรงนี้มันเป็น path ที่อยู่ข้างใน container
      DOCKER_INFLUXDB_INIT_PASSWORD_FILE: /run/secrets/influxdb2-admin-password #การให้ docker เข้าไปหา file password จาก  /run/secrets/influxdb2-admin-password ซึ่งตรงนี้มันเป็น path ที่อยู่ข้างใน container
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN_FILE: /run/secrets/influxdb2-admin-token #การให้ docker เข้าไปหา file Token จาก  /run/secrets/influxdb2-admin-token ซึ่งตรงนี้มันเป็น path ที่อยู่ข้างใน container
      DOCKER_INFLUXDB_INIT_ORG: docs   #เป็นการกำหนดตัว ORG ให้กับฐานข้อมูล
      DOCKER_INFLUXDB_INIT_BUCKET: home #เป็นการตั้งชื่อ bucket ให้กับฐานข้อมูล
    secrets:		#เป็นการบอกว่าตัว secrets ของ service มีการใช้ตัวไหนบ้าง
      - influxdb2-admin-username
      - influxdb2-admin-password
      - influxdb2-admin-token
    volumes: #ตรงนี้เป็นการสร้าง volume ของ data โดย path ของเครื่อง 
        #ในส่วนของ data ในฝั่ง host คือ C:/docker/iot/influxdb2/data ส่วน path ของ dockerในการเก็บข้อมูลอยู่ที่ /var/lib/influxdb2
      #- C:/docker/iot/influxdb2/data:/var/lib/influxdb2    
      #ในส่วนของการสร้าง path ผ่านทาง name volume ของ docker โดยใช้ชื่อว่า influxdb2-data 
      #โดยเก็บอยู่ใน path ของ host ที่ชื่อว่า C:/docker/iot/influxdb2/data
      - influxdb2-data:/var/lib/influxdb2

        #ในการของการเก็บค่า config โดยอ้างอิงจาก path ของ host จาก path: C:/docker/iot/influxdb2/config ส่วน path ของ docker ที่จัดการไฟล์ config ของ host จาก path คือ C:/docker/iot/influxdb2/config
      - C:/docker/iot/influxdb2/config:/etc/influxdb2
    restart: unless-stopped

secrets:
 influxdb2-admin-username:
    file: C:/docker/iot/influxdb2/secrets/influxdb2-admin-username
 influxdb2-admin-password:
    file: C:/docker/iot/influxdb2/secrets/influxdb2-admin-password
 influxdb2-admin-token:
    file: C:/docker/iot/influxdb2/secrets/influxdb2-admin-token


volumes:
 nodered_data:
   driver: local		# ใช้ driver ปกติของ Docker
   driver_opts:
     type: none			# ไม่ต้องใช้ fs พิเศษ
     o: bind
     device: ${NODERED_DATA_PATH}	# path จริงที่ชี้ไปยัง OneDrive

 grafana_data:
   driver: local
   driver_opts:
     type: none
     o: bind
     device: ${GRAFANA_DATA_PATH}

 influxdb2-data:
   driver: local
   driver_opts:
     type: none
     o: bind
     device: C:/docker/iot/influxdb2/data